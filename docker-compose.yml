# docker-compose.yml
services:
  api:
    build:
      context: ./movie-booking
      dockerfile: Dockerfile 
    depends_on:
      - db
    environment:
      - ENV=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/mbs
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Aboard$789
      - SERVER_PORT=8080
      - JWT_TOKEN_SECRET=66546A576E5A7234753778214125442A472D4B614E645267556B587032733576
      - JWT_ACCESS_TOKEN_DURATION_MINUTE=15
      - JWT_ACCESS_TOKEN_DURATION_SECOND=9000
      - JWT_REFRESH_TOKEN_DURATION_DAY=7
      - JWT_REFRESH_TOKEN_DURATION_SECOND=604800
      - JWT_ACCESS_COOKIE_NAME=access_token
      - JWT_REFRESH_COOKIE_NAME=refresh_token
      - EMAIL_USERNAME=gahlot22anshuma@gmail.com
      - EMAIL_PASSWORD=xpth msmw phni xvnj
    volumes:
      - ./movie-booking:/movie-booking
    ports:
      - "8080:8080"  
    restart: unless-stopped
    networks:
      - lumos

  ui:
    build:
      context: ./mbs-frontend
      dockerfile: Dockerfile 
    depends_on:
      - api
    volumes:
      - ./mbs-frontend:/mbs-frontend
    command: bash -c "npm install -g npm@10.5.1 && npm install && ng serve --host 0.0.0.0 --poll=2000"
    ports:
      - "4200:4200" 
    restart: unless-stopped
    networks:
      - lumos

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Aboard$789
      POSTGRES_DB: mbs
    volumes:
      - db_data_volume:/var/lib/postgresql/data 
    ports:
      - "8081:5432"
    networks:
      - lumos
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data:

networks:
  lumos:
    driver: bridge
